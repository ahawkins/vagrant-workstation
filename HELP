WORKSTATION COMMANDS

These commands replace or modify the appropriate vagrant command.

	up -n NAME -v VAGRANTFILE -p PROJECT_PATH [-- VAGRANT_OPTIONS]

		Boot the workstation for PROJECT_PATH with a specific using
		the VAGRANTFILE. VAGRANTFILE must be an absolute path.
		VAGRANT_OPTIONS are forwarded to `vagrant up`.

	run COMMAND [COMMAND_OPIONS]
	
		Run command in matching project directory. Run executes the command
		in the matching project directory.

	CUSTOM [COMMAND_OPTIONS]

		CUSTOM may also be a custom command. Define a custom command by
		creating a file in $PROJECT_PATH/.workstation/commands/COMMAND
		(See configuration section below). The content of the file is
		then passed to run. Assume PROJECT_PATH is the value used for
		`workstation up -p PROJECT_PATH`.

		Here's an example.
		
			$ echo "make test" > $PROJECT_PATH/.workstation/commands/test
			$ workstation test

		This is equivalent to running `workstation run make test` without
		having to type it everytime.

FORWARDED COMMANDS

The following subcommands are forwarded directly to `vagrant`. They are
invoked just like normal `vagrant` command just with the appropriate
virtual machine selected and exported environment variables.
Usage: worktation SUBCOMMAND [OPTIONS]

	reload
	destroy
	halt
	provision
	status
	snapshot
	suspend
	ssh

CONFIGURATION

The XDG_DATA_HOME environment variable sets the directory to write
artifact files. Defaults to ~/.local/usr/share.

Set the WORKSTATION_NAME environment variable to avoid file system
based workstation lookups. Primarily useful in scripting.

See https://github.com/ahawkins/vagrant-workstation for more
information.
